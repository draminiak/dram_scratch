'use strict';

exports.handler = (event, context, callback) => {

    // Configure authentication

    // Get request and request headers
    const request = event.Records[0].cf.request;
    const headers = request.headers;

    // BasicAuth
    const allow = isAuthenticated(headers.authorization);
    if (allow) {
        // Continue request processing if authentication passed
        callback(null, request);
    }

    const body = 'Unauthorized';
    const response = {
        status: '401',
        statusDescription: 'Unauthorized',
        body: body,
        headers: {
            'www-authenticate': [{key: 'WWW-Authenticate', value:'Basic'}]
        },
    };
    callback(null, response);
};

function getCreds() {
    // TODO : WARNING- changing the usr/pwd may require a stack destroy/deploy as cdk is not recognizing the file change
    return {
        "yamaha-motors": '737LFaU.z7Agsc4nKR',
        "yamaha-motor": '737LFaU.z7Agsc4nKR'
    };
}

function isAuthenticated(authHeader) {
    if (authHeader) {
        const validCreds = getCreds();
        const auth = authHeader.split(" ")[1];
        const [user, pwd] = Buffer.from(auth, "base64").toString().split(":");
        return (user in validCreds && pwd === validCreds[user]);
    }
    return false;
}
